levels {
  ROOT = TRACE
}

highlight {
  error = "red"
  warn = "yellow"
  info = "white"
  debug = "cyan"
  trace = "blue"
}

log.dir = "logs"

# Defines properties (Strings) to be put into local scope (interpretationContext.putProperty)
# See https://logback.qos.ch/manual/configuration.html#scopes
local {
  logback.environment = development

  shutdownHook {
    delay = 100   # Defined in milliseconds
  }

  encoders {
    short {
      pattern = "%uniqueId %date{H:mm:ss.SSS} [%terseHighlight(%-5level){highlightMap}] %logger{15} -  %message%richex{1, 10, exception=[}%n"
    }

    detailed {
      outputPatternAsHeader = false

      // https://github.com/logstash/logstash-logback-encoder/blob/master/src/main/java/net/logstash/logback/stacktrace/ShortenedThrowableConverter.java#L58
      // Options can be specified in the pattern in the following order:
      //   - maxDepthPerThrowable = "full" or "short" or an integer value
      //   - shortenedClassNameLength = "full" or "short" or an integer value
      //   - maxLength = "full" or "short" or an integer value
      //
      //%msg%n%stack{5,1024,10,rootFirst,regex1,regex2,evaluatorName}

      pattern = "%uniqueId %date{yyyy-MM-dd'T'HH:mm:ss.SSSZZ,UTC} [%-5level] %logger in %thread %marker - %message%n%stack{full,full,short,rootFirst}"
    }

    json {
      timeZone = "UTC"
      timestampPattern = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"

      # https://github.com/logstash/logstash-logback-encoder#customizing-stack-traces
      shortenedThrowableConverter {
        maxDepthPerThrowable = 100
        maxLength = 100
        shortenedClassNameLength = 50

        exclusions = """\$\$FastClassByCGLIB\$\$,\$\$EnhancerBySpringCGLIB\$\$,^sun\.reflect\..*\.invoke,^com\.sun\.,^sun\.net\.,^net\.sf\.cglib\.proxy\.MethodProxy\.invoke,^org\.springframework\.cglib\.,^org\.springframework\.transaction\.,^org\.springframework\.validation\.,^org\.springframework\.app\.,^org\.springframework\.aop\.,^java\.lang\.reflect\.Method\.invoke,^org\.springframework\.ws\..*\.invoke,^org\.springframework\.ws\.transport\.,^org\.springframework\.ws\.soap\.saaj\.SaajSoapMessage\.,^org\.springframework\.ws\.client\.core\.WebServiceTemplate\.,^org\.springframework\.web\.filter\.,^org\.apache\.tomcat\.,^org\.apache\.catalina\.,^org\.apache\.coyote\.,^java\.util\.concurrent\.ThreadPoolExecutor\.runWorker,^java\.lang\.Thread\.run$"""

        rootCauseFirst = true
        inlineHash = true
      }
    }
  }

  console {
    enabled = true
    threshold = TRACE

    withJansi = false # allow colored logging on windows
  }

  // Used in jsonfile-appenders.xml
  jsonfile {
    enabled = true
    threshold = TRACE

    location = ${log.dir}"/application.json"
    append = false
    immediateFlush = true
  }

  // used in textfile-appenders.xml
  textfile {
    enabled = true
    threshold = TRACE

    location = ${log.dir}/application.log
    append = false
    immediateFlush = true
  }
}

# Defines properties (Strings) to be set in context scope (loggerContext.putProperty)
# See https://logback.qos.ch/manual/configuration.html#scopes
context {
  blindsight.source.enabled = true
}

# Defines exception mapping
exceptionmappings {

}